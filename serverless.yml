service: reactApiLambda

plugins:
  #Required when running in UTC+8, with .env document
  - serverless-dotenv-plugin

frameworkVersion: "3"

provider:
  name: aws
  runtime: Python3.7
  profile: default
  region: us-east-1
  iam:
    role:
      statements:
        #Apply below policies to all to be built lambda functions
        - Effect: Allow
          Action:
            - dynamodb:BatchGetItem
            - dynamodb:GetItem
            - dynamodb:Query
            - dynamodb:Scan
            - dynamodb:BatchWriteItem
            - dynamodb:PutItem
            - dynamodb:DeleteItem
          Resource:
            - { "Fn::GetAtt": ["vrec_ddb", "Arn"] }
            - { "Fn::GetAtt": ["org_ddb", "Arn"] }
          #CloudWatch policies for allowing log output
        - Effect: Allow
          Action:
            - logs:CreateLogStream
            - logs:PutLogEvents
          Resource: arn:aws:logs:${AWS::Region}:${AWS::AccountId}:*
        - Effect: Allow
          Action:
            - logs:CreateLogGroup
          Resource: "*"

functions:
  create:
    handler: lambda/create.lambda_handler
    events:
      - http:
          path: /create
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Amzn-Trace-Id
              - Access-Control-Allow-Origin
    environment:
      TABLE_NAME: !Ref vrec_ddb
  authenticate:
    handler: lambda/authenticate.lambda_handler
    events:
      - http:
          path: /authenticate
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Amzn-Trace-Id
              - Access-Control-Allow-Origin
    environment:
      TABLE_NAME: !Ref vrec_ddb
  retrieve:
    handler: lambda/retrieve.lambda_handler
    events:
      - http:
          path: /
          method: post
          cors:
            origin: "*"
            headers:
              - Content-Type
              - X-Amz-Date
              - Authorization
              - X-Api-Key
              - X-Amz-Security-Token
              - X-Amz-User-Agent
              - X-Amzn-Trace-Id
              - Access-Control-Allow-Origin
    environment:
      TABLE_NAME: !Ref org_ddb

resources:
  Resources:
    vrec_ddb:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          - AttributeName: Name
            AttributeType: S
        #On Demand Billing
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: Name
            KeyType: HASH
    org_ddb:
      Type: "AWS::DynamoDB::Table"
      DeletionPolicy: Delete
      Properties:
        AttributeDefinitions:
          - AttributeName: Name
            AttributeType: S
        #On Demand Billing
        BillingMode: PAY_PER_REQUEST
        KeySchema:
          - AttributeName: Name
            KeyType: HASH
